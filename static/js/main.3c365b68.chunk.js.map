{"version":3,"sources":["redux-charts/packets.js","redux-charts/machine.js","redux-charts/store.js","redux-charts/constants.js","machine/events.js","selectors.js","machine/chart.js","machine/actions.js","machine/writes.js","config.js","reducers.js","design/frame.js","ui/marquee.js","ui/display-board.js","hooks/use-interval.js","faces/pat.png","faces/bruce.png","faces/hilary.png","faces/jeff.png","faces/meryl.png","faces/will.png","faces/question.png","faces/index.js","ui/reel.js","ui/reel-unit.js","ui/layout.js","App.js","index.js"],"names":["dispatch","machine","store","reducers","reducer","chart","generateType","name","toUpperCase","makePackets","packetsConfig","active","packets","Object","entries","forEach","packetName","config","packet","type","props","key","packetCreator","args","length","arg","i","makeTypes","types","keys","Machine","init","setState","start","transition","eventsConfig","spin","stop","peek","Events","getAppState","state","getIsSpinning","getLevelNo","game","level","getLevel","levelNo","getMessage","stateName","split","pop","message","getIsNotStarted","initial","states","notStarted","on","playing","spinning","entry","setTimeout","guessing","target","actions","id","reveal","cond","indexOf","getPat","attempts","getAttempts","found","always","_","exit","levelUp","jeff","gameOver","resetGame","writesConfig","Writes","getIdFromName","byName","locations","makeStateNodes","byId","rootId","String","rootNode","children","parent","path","siblings","transitions","initNodes","nodeId","push","node","finishNodes","makeAlways","k","v","makeTranistions","filter","getSiblings","getIdOrTransition","event","stateCanTransition","storeState","Error","data","fireAction","eventPayload","execTransition","newState","nextState","getState","initMachine","receive","currentState","lastIndexOf","slice","getIdFromPath","idOrTransition","getNextState","connectMachine","next","d","ignores","values","includes","nextStateId","write","levels","script","initGame","appConfig","ui","reduxCombine","Frame","styled","div","color","border","center","pd","h","w","gtr","gtc","hint","keyframes","Container","isNotStarted","css","Title","Marquee","onClick","useSelector","Message","DisplayBoard","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","faces","pat","bruce","hilary","meryl","will","Div","Img","img","hide","Reel","face","focus","isSpinning","isRevealed","getIsRevealed","src","question","ReelUnit","useState","setFocus","f","map","index","Wallpaper","Layout","GlobalStyle","createGlobalStyle","App","configureStore","middleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIAAIA,ECsNAC,ECrMAC,EAF4BC,E,wBAIJC,EAQHC,E,+CFrBnBC,EAAe,SAACC,GAAD,OAAUA,EAAKC,eAEvBC,EAAc,SAACC,EAAeC,GACzC,IAAMC,EAAU,GA2BhB,OAzBAC,OAAOC,QAAQJ,GAAeK,SAAQ,YAA2B,IAAD,mBAAxBC,EAAwB,KAAZC,EAAY,KACxDC,EAAS,CAAEC,KAAMb,EAAaU,IAGhCC,EAAOG,OACTH,EAAOG,MAAML,SAAQ,SAACM,GACpBH,EAAOG,GAAO,QAIlB,IAAMC,EAAgB,SAACC,GAOrB,OANIA,EAAKC,QACPD,EAAKR,SAAQ,SAACU,EAAKC,GAEjBR,EAAOD,EAAOG,MAAMM,IAAMD,KAGvBP,GAGTN,EAAQI,GAAcL,EAClB,sCAAIY,EAAJ,yBAAIA,EAAJ,uBAAavB,EAASsB,EAAcC,KACpC,sCAAIA,EAAJ,yBAAIA,EAAJ,uBAAa,kBAAMvB,EAASsB,EAAcC,SAGzCX,GAGIe,EAAY,SAACjB,GACxB,IAAMkB,EAAQ,GAId,OAHAf,OAAOgB,KAAKnB,GAAeK,SAAQ,SAACM,GAClCO,EAAMP,GAAOf,EAAae,MAErBO,G,sCG5CIE,EAAU,CACrBC,KAAM,eACNC,SAAU,mBACVC,MAAO,gBACPC,WAAY,sBCFRC,EAAe,CACnBC,KAAM,GACNC,KAAM,GACNC,KAAM,CAAElB,MAAO,CAAC,QAILmB,EAASZ,EAAUQ,G,EAEI1B,EAAY0B,GAAjCC,E,EAAAA,KAAMC,E,EAAAA,KAAMC,E,EAAAA,KCXdE,EAAc,SAACC,GAAD,OAAWA,EAAMpC,OAI/BqC,EAAgB,SAACD,GAAD,MAAkC,sBAAvBD,EAAYC,IAEvCE,EAAa,SAACF,GAAD,OAAWA,EAAMG,KAAKC,OAEnCC,EAAW,SAACL,GACvB,IAAMM,EAAUJ,EAAWF,GAC3B,OAAOA,EAAMxB,OAAO8B,IAQTC,EAAa,SAACP,GACzB,IAAMQ,EAAYT,EAAYC,GAAOS,MAAM,KAAKC,MAC1CC,EAAUX,EAAMW,QAAQH,GAC9B,MAAuB,kBAAZG,EAA6BA,EACjCA,EAAQ,IAKJC,EAAkB,SAACZ,GAAD,MAAkC,gBAAvBD,EAAYC,ICqCvCpC,EAtDD,CACZiD,QAAS,aACTC,OAAQ,CACNC,WAAY,CACVC,GAAI,CACF,CAAClB,EAAOH,MAAO,YAGnBsB,QAAS,CACPJ,QAAS,WACTC,OAAQ,CACNI,SAAU,CACRC,MCZU,kBAAMC,WAAWxB,IAAQ,ODanCoB,GAAI,CACF,CAAClB,EAAOF,MAAO,aAGnByB,SAAU,CACRL,GAAI,CACF,CAAClB,EAAOD,MAAO,CACbyB,OAAQ,QACRC,QCzBM,SAAC,GAAY,IAAVC,EAAS,EAATA,GACrBC,GAAOD,IDyBKE,KC7Bc,SAAC,EAAQ1B,GAAT,SAAGwB,KFUT,SAACxB,GAErB,OADcK,EAASL,GACV2B,QAAQ,GEXdC,CAAO5B,IAAiC,IAAtBE,EAAWF,IAAuC,IFqBlD,SAACA,GAAD,OAAWA,EAAMG,KAAK0B,SErBKC,CAAY9B,ODgC1D+B,MAAO,CACLC,OAAQ,CACNV,OAAQ,OACRI,KC3BgB,SAACO,EAAGjC,GAE9B,OAAiB,IADHE,EAAWF,KD4BjBkC,KCxBkB,WAC1BC,KDwBQnB,GAAI,CACF,CAAClB,EAAOH,MAAO,eAKvByC,KAAM,CACJpB,GAAI,CACF,CAAClB,EAAOH,MAAO,aAGnB0C,SAAU,CACRrB,GAAI,CACF,CAAClB,EAAOH,MAAO,CACb2B,OAAQ,aACRC,QCpCW,WACnBe,UCpBIC,EAAe,CACnBJ,QAAS,GACTG,UAAW,GACXb,OAAQ,CAAE9C,MAAO,CAAC,OAClBc,WAAY,CAAEd,MAAO,CAAC,WAGX6D,EAAStD,EAAUqD,G,EAE0BvE,EACxDuE,GACA,GAFaJ,E,EAAAA,QAASG,E,EAAAA,UAAWb,G,EAAAA,OPP7BgB,I,EOOqChD,WPPrB,SAACiD,EAAQ5E,GAC7B,IAAM6E,EAAYD,EAAO5E,GACzB,OAAK6E,EAAU5D,OAER4D,EAAU,GAAG,GAFU,OA4B1BC,GAAiB,SAAChF,GACtB,IAAMiF,EAAO,GACPH,EAAS,GACXlB,EAAK,EA0CHsB,EAASC,OAAOvB,GAChBwB,EAAW,CACfC,SAAU,GACVzB,GAAIsB,EACJjC,QAASjD,EAAMiD,QACf/C,KAAM,KACNoF,OAAQ,KACRC,KAAM,IACNC,SAAU,KACVC,YAAazF,EAAMoD,IAAM,MAE3B6B,EAAKC,GAAUE,EACfN,EAAOM,EAASG,MAAQ,CAAC,CAACL,EAAQE,EAASG,OAC3C3B,GAAM,EArDY,SAAZ8B,EAAa1F,EAAOsF,GACxB9E,OAAOC,QAAQT,EAAMkD,QAAQxC,SAAQ,YAAyB,IAAD,mBAAtBkC,EAAsB,KAAXR,EAAW,KACrDuD,EAASR,OAAOvB,GAGtB0B,EAAOD,SAASO,KAAKD,GAGrB,IAAME,EAAO,CACXzB,OAAQhC,EAAMgC,QAAU,KACxBiB,SAAU,GACV9B,MAAOnB,EAAMmB,OAAS,KACtBe,KAAMlC,EAAMkC,MAAQ,KACpBV,GAAI+B,EACJ1C,QAASb,EAAMa,SAAW,KAC1B/C,KAAM0C,EACN0C,OAAQA,EAAO1B,GACf2B,KAAK,GAAD,OAAKD,EAAOC,MAAZ,OAAmBD,EAAOA,OAAS,IAAM,IAAzC,OAA8C1C,GAClD6C,YAAarD,EAAMgB,IAAM,MAI3B6B,EAAKY,EAAKjC,IAAMiC,EAGZf,EAAOe,EAAK3F,MACd4E,EAAOe,EAAK3F,MAAQ4E,EAAOe,EAAK3F,MAAM0F,KAAK,CAACC,EAAKjC,GAAIiC,EAAKN,OAE1DT,EAAOe,EAAK3F,MAAQ,CAAC,CAAC2F,EAAKjC,GAAIiC,EAAKN,OAGtC3B,GAAM,EAGFxB,EAAMc,QACRwC,EAAUtD,EAAOyD,MAoBvBH,CAAU1F,EAAOoF,GA0BjB,OAfoB,SAAdU,EAAelC,GACnB,IAAMiC,EAAOZ,EAAKrB,GAGlBiC,EAAKzB,OAASyB,EAAKzB,QA5FJ,SAACU,EAAQV,GAAT,mBAAC,eACfA,GADc,IAEjBV,OAAQmB,GAAcC,EAAQV,EAAOV,UA0FNqC,CAAWjB,EAAQe,EAAKzB,QACrDyB,EAAK5C,QAAU4C,EAAK5C,SAAW4B,GAAcC,EAAQe,EAAK5C,SAC1D4C,EAAKJ,YAzFe,SAACX,EAAQe,GAC/B,IAAKA,EAAKJ,YAAa,OAAO,KAC9B,IAAMA,EAAc,GAOpB,OANAjF,OAAOC,QAAQoF,EAAKJ,aAAa/E,SAAQ,YAAa,IAAD,mBAAVsF,EAAU,KAAPC,EAAO,KACnDR,EAAYO,GACG,kBAANC,EACHpB,GAAcC,EAAQmB,GAD1B,2BAESA,GAFT,IAEYvC,OAAQmB,GAAcC,EAAQmB,EAAEvC,aAEzC+B,EAgFcS,CAAgBpB,EAAQe,GAC3CA,EAAI,SAhBc,SAACZ,EAAMY,GACzB,IAAKA,EAAKP,OAAQ,OAAO,KACzB,IAAMA,EAASL,EAAKY,EAAKP,QACzB,OAAIA,EAAOD,SAASlE,QAAU,EAAU,KAGjCmE,EAAOD,SAASc,QAAO,SAAC9E,GAAD,OAAOA,IAAMwE,EAAKjC,MAU7BwC,CAAYnB,EAAMY,GACjCA,EAAKR,SAASlE,QAChB0E,EAAKR,SAAS3E,SAAQ,SAACkD,GAAD,OAAQkC,EAAYlC,MAI9CkC,CAAYZ,GAEL,CAAED,OAAMH,WAGXuB,GAAoB,SAApBA,EAAqBjE,EAAOkE,EAAO1G,GAEvC,GAAiB,MAAbwC,EAAMwB,KAAexB,EAAMqD,YAAa,OAAO,KAEnD,IAAM5D,EAAaO,EAAMqD,aAAerD,EAAMqD,YAAYa,EAAMxF,MAGhE,OAAIe,IAGa,MAAbO,EAAMwB,GAAmB,KAItByC,EADQzG,EAAQsD,OAAO+B,KAAK7C,EAAMkD,QACRgB,EAAO1G,KAGpC2G,GAAqB,SAAC1E,EAAYyE,EAAOE,EAAY5G,GACzD,IAAKiC,EAAW6B,OAAQ,MAAM,IAAI+C,MAAM,4BACxC,GAAI5E,EAAWiC,KAAM,CACOwC,EAAlBxF,KADY,IACH4F,EADE,YACOJ,EADP,UAEnB,IAAKzE,EAAWiC,KAAK4C,EAAMF,GAAa,OAAO,KAEjD,OAAO5G,EAAQsD,OAAO+B,KAAKpD,EAAW6B,SAmBlCiD,GAAa,SAAChD,EAASiD,EAAcJ,GACzC7C,EAAQiD,EAAcJ,IAGlBK,GAAiB,SAAjBA,EAAkBC,EAAUR,EAAOE,EAAY3G,EAAOD,GAE1D,GAAIkH,EAAS1C,OAAQ,CACnB,IAAM2C,EAAYR,GAAmBO,EAAS1C,OAAQkC,EAAOE,EAAY5G,GACzE,GAAImH,EAEF,YADAF,EAAeE,EAAWT,EAAOE,EAAY3G,EAAOD,GAK9B0G,EAAlBxF,KAV8D,IAUrD4F,EAVqD,YAU5CJ,EAV4C,UAYtEQ,EAASvD,OAASuD,EAASvD,MAAMmD,EAAM7G,EAAMmH,YAGzCF,EAAS7D,QACX4D,EAAejH,EAAQsD,OAAO+B,KAAK6B,EAAS7D,SAAUqD,EAAOE,EAAY3G,EAAOD,GAKlFC,EAAMF,SAAS,CAAEmB,KAAMW,EAAQI,WAAYO,MAAO0E,EAASvB,QAGvD0B,GAAc,SAACjH,EAAOH,GAC1B,IAAMD,EAAU,CACdsD,OAAQ8B,GAAehF,IAgBzB,OAFAJ,EAAQsH,QAXQ,SAACZ,EAAO1G,GACtB,IAAM4G,EAAa3G,EAAMmH,WACnBG,EAAeX,EAAWxG,MAC1B4D,EA9LY,SAACkB,EAAQS,GAC7B,IAAM3D,EAAQ2D,EAAK6B,YAAY,KAAO,EAChClH,EAAOqF,EAAK8B,MAAMzF,GACxB,OAAOiD,GAAcC,EAAQ5E,GA2LhBoH,CAAc1H,EAAQsD,OAAO4B,OAAQqC,GAC1C/E,EAAQxC,EAAQsD,OAAO+B,KAAKrB,GAC5BmD,EAtDW,SAAC3E,EAAOkE,EAAOE,EAAY5G,GAC9C,IAAM2H,EAAiBlB,GAAkBjE,EAAOkE,EAAO1G,GACvD,IAAK2H,EAAgB,OAAO,KAE5B,GAA8B,kBAAnBA,EACT,OAAO3H,EAAQsD,OAAO+B,KAAKsC,GAG7B,GAAIA,EAAe5D,QAAS,CACQ2C,EAA1BxF,KADmB,IACV8F,EADS,YACQN,EADR,UAE1BK,GAAWY,EAAe5D,QAASiD,EAAcJ,GAGnD,OAAOD,GAAmBgB,EAAgBjB,EAAOE,EAAY5G,GAyCzC4H,CAAapF,EAAOkE,EAAOE,EAAY5G,GACxCgH,GAAiBN,EAA1BxF,KAN0B,YAMAwF,EANA,WAOlCS,GAAa3E,EAAMkC,MAAQqC,GAAWvE,EAAMkC,KAAMsC,EAAcJ,GAChEO,GAAaF,GAAeE,EAAWT,EAAOE,EAAY3G,EAAOD,IAK5DA,GAKI6H,GAAiB,SAAC5H,GAAD,OAAW,SAAC6H,GAAD,OAAU,SAACpB,GAGlD,GAFAoB,EAAKpB,GAEDA,EAAMxF,OAASW,EAAQC,KAEzB,OD3NwBiG,EC0NZ9H,EAAMF,cDzNpBA,EAAWgI,GADc,IAACA,EC8N1B,GAAIrB,EAAMxF,OAASW,EAAQG,MAA3B,CAQA,IAAMgG,EAAO,sBAAOpH,OAAOqH,OAAOjD,IAArB,YAAiCpE,OAAOqH,OAAOpG,KACxD7B,IAAYgI,EAAQE,SAASxB,EAAMxF,OAAOlB,EAAQsH,QAAQZ,EAAO1G,OATrE,CAEE,IAAMmI,GADNnI,EAAUqH,GAAYX,EAAMtG,MAAOH,IACPqD,OAAO+B,KAAK,GAAKhC,QACvC8D,EAAYnH,EAAQsD,OAAO+B,KAAK8C,GACtClI,EAAMF,SAAS,CAAEmB,KAAMW,EAAQE,SAAUS,MAAO2E,EAAUxB,WC/NxDvF,GAAQ,WAAwB,IAAvBoC,EAAsB,uDAAd,GAAI4F,EAAU,uCACnC,OAAQA,EAAMlH,MACZ,KAAKW,EAAQE,SACb,KAAKF,EAAQI,WACX,OAAOmG,EAAM5F,MACf,QACE,OAAOA,IOMExB,GAjBA,CACbqH,OAAQ,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,OAAQ,CACN/E,WAAY,iBACZG,SAAU,CAAC,YAAa,YAAa,cAAe,cACpDG,SAAU,CAAC,eAAgB,iBAAkB,yBAC7CU,MAAO,SACPK,KAAM,yBACNC,SAAU,cCFR0D,GAAW,CAAElE,SAAU,EAAGzB,MAAO,GAuDxBzC,IRnDiBD,EQiDA,CAAEc,OA5DnB,WAAsC,IAArCwB,EAAoC,uDAA5BgG,GAAUH,OAAQD,EAAU,uCAG9C,OAFIA,EAAMlH,KAEHsB,GAyD6BG,KAnD7B,WAA8B,IAA7BH,EAA4B,uDAApB+F,GAAUH,EAAU,uCACxC,OAAQA,EAAMlH,MACZ,KAAK8D,EAAOL,QACV,MAAO,CACLN,SAAU,EACVzB,MAAOJ,EAAMI,MAAQ,GAEzB,KAAKoC,EAAOf,OACV,OAAO,2BAAKzB,GAAZ,IAAmB6B,SAAU7B,EAAM6B,SAAW,IAChD,KAAKW,EAAOF,UACV,OAAOyD,GACT,QACE,OAAO/F,IAuCmCW,QAnChC,WAAsC,IAArCX,EAAoC,uDAA5BgG,GAAUF,OAAQF,EAAU,uCACnD,OAAQA,EAAMlH,MACZ,KAAK8D,EAAOL,QACV,OAAO,2BACFnC,GADL,IAEEqB,SAAU2E,GAAUF,OAAOzE,SAC3BH,SAAUlB,EAAMkB,SAAS+D,MAAM,KAEnC,KAAKzC,EAAOf,OACV,OAAO,2BACFzB,GADL,IAEEqB,SAAUrB,EAAMqB,SAAS4D,MAAM,KAEnC,KAAKzC,EAAOF,UACV,OAAO0D,GAAUF,OACnB,QACE,OAAO9F,IAmB4CiG,GAf9C,WAA+B,IAA9BjG,EAA6B,uDAArB,CAAC,EAAG,EAAG,GAAI4F,EAAU,uCACvC,OAAQA,EAAMlH,MACZ,KAAK8D,EAAOL,QACZ,KAAKK,EAAOF,UACV,MAAO,CAAC,EAAG,EAAG,GAChB,KAAKE,EAAOf,OACV,IAAMkD,EAAS,YAAO3E,GAEtB,OADA2E,EAAUiB,EAAMpE,IAAM,EACfmD,EAET,QACE,OAAO3E,KR7CgCkG,YAAa,aAAEtI,UAAUF,K,gBSCvDyI,GAdDC,KAAOC,IAAV,kLAIW,qBAAGC,SACrB,gBAAGC,EAAH,EAAGA,OAAH,OAAgBA,GAAM,4BAAyBA,MAC/C,qBAAGC,QAAuB,yBAC1B,gBAAGC,EAAH,EAAGA,GAAH,OAAYA,GAAE,mBAAgBA,MAC9B,gBAAGC,EAAH,EAAGA,EAAH,OAAWA,GAAC,kBAAeA,MAC3B,gBAAGC,EAAH,EAAGA,EAAH,OAAWA,GAAC,iBAAcA,MAC1B,gBAAGC,EAAH,EAAGA,IAAH,OAAaA,GAAG,8BAA2BA,MAC3C,gBAAGC,EAAH,EAAGA,IAAH,OAAaA,GAAG,iCAA8BA,M,QCP5CC,GAAOC,aAAH,qKAYJC,GAAYZ,aAAOD,GAAPC,CAAH,qOAWX,qBAAGa,cAAmCC,aAAJ,sDAAqBJ,OAGrDK,GAAQf,KAAOC,IAAV,wLAsBIe,GAdC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACXJ,EAAeK,YAAY1G,GACjC,OACE,eAACoG,GAAD,CACET,OAAO,WACPC,QAAM,EACNS,aAAcA,EACdI,QAASA,EAJX,SAME,eAACF,GAAD,6BC3CAI,GAAUnB,KAAOC,IAAV,0IAkBEmB,GAVM,WACnB,IAAM7G,EAAU2G,YAAY/G,GAE5B,OACE,eAAC,GAAD,CAAOgG,OAAO,QAAQC,QAAM,EAACF,MAAM,YAAYG,GAAG,UAAlD,SACE,eAACc,GAAD,UAAU5G,OCGD8G,GApBK,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAInG,EAAKwG,aAJE,WACXJ,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMM,cAAczG,OAE5B,CAACmG,KCnBS,OAA0B,gCCA1B,OAA0B,kCCA1B,OAA0B,mCCA1B,OAA0B,iCCA1B,OAA0B,kCCA1B,OAA0B,iCCA1B,OAA0B,qCCU1BO,GAFD,CAACC,GAAKC,GAAOC,GAAQjG,GAAMkG,GAAOC,ICA1CvB,GAAYZ,aAAOD,GAAPC,CAAH,qIAOToC,GAAMpC,KAAOC,IAAV,qJAUHoC,GAAMrC,KAAOsC,IAAV,kGAIL,qBAAGC,MAAmB,gBAwCXC,GArCF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOtH,EAAqB,EAArBA,GAAIuH,EAAiB,EAAjBA,WACzBC,EAAa1B,aAAY,SAACtH,GAAD,OlB/BJ,SAACA,EAAOwB,GAAR,OAAexB,EAAMiG,GAAGzE,GkB+BTyH,CAAcjJ,EAAOwB,MAE/D,OACE,gBAAC,GAAD,CACE+E,OAAO,QACPC,QAAM,EACNF,MAAM,OAENe,QAAS2B,EAAa,aAAWnJ,EAAK2B,GACtCiF,GAAG,UANL,UAQE,eAAC+B,GAAD,UACE,eAACC,GAAD,CACEjH,GAAIA,EACJmH,KAAMI,GAAcC,EACpBE,IAAKC,OAGT,eAACX,GAAD,UACE,eAACC,GAAD,CACEjH,GAAIA,EACJmH,MAAOI,IAAeD,EACtBI,IAAKhB,GAAM,OAGf,eAACM,GAAD,UACE,eAACC,GAAD,CACEjH,GAAIA,EACJmH,MAAOK,EACPE,IAAKhB,GAAMW,SAtBVrH,ICJI4H,GA7BE,WAAO,IAAD,EACKC,mBAAS,GADd,mBACdP,EADc,KACPQ,EADO,KAEfP,EAAazB,YAAYrH,GACzBG,EAAQkH,YAAYjH,GACpBjB,EAAO,CAAC,QAAS,OAAQ,WAU/B,OARAqI,IAAY,WACV6B,GAAS,SAACC,GAAD,OAAQA,EAAI,GAAK,OACzBR,EAAa,IAAM,MAEtBjB,qBAAU,WACJgB,IAAUC,GAAYO,EAAS,KAClC,CAACP,EAAYD,IAGd,eAAC,GAAD,CAAOvC,OAAO,OAAOD,MAAM,QAAQO,IAAI,cAAcJ,GAAG,UAAxD,SACGrG,EAAMoJ,KAAI,SAACX,EAAMY,GAAP,OACT,eAAC,GAAD,CACEZ,KAAMA,EACNC,MAAOA,IAAUW,EACjBjI,GAAIiI,EACJV,WAAYA,GACP3J,EAAKqK,UCrBdC,GAAYtD,KAAOC,IAAV,2HAOTW,GAAYZ,aAAOD,GAAPC,CAAH,oJAqBAuD,GAZA,kBACb,eAACD,GAAD,UACE,gBAAC,GAAD,CAAWpD,MAAM,QAAQM,IAAI,UAAUH,GAAG,UAA1C,UACE,eAAC,GAAD,CAASY,QAAS1H,MAClB,gBAAC,GAAD,CAAO4G,OAAO,WAAWD,MAAM,SAASM,IAAI,WAAWH,GAAG,UAA1D,UACE,eAAC,GAAD,IACA,eAAC,GAAD,aCzBFmD,I,MAAcC,aAAH,uMAmBFC,GATH,WACV,OACE,uCACE,eAACF,GAAD,IACA,eAAC,GAAD,QxBAsBjM,EyBXhBA,IzBYVF,EAAQsM,YAAe,CACrBC,WAAY,CAAC3E,IACb1H,aAEIJ,SAAS,CAAEmB,KAAMW,EAAQC,OyBdjC2K,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAU1M,OzBeWG,EyBfKA,EzBgB5BH,EAAMF,SAAS,CAAEmB,KAAMW,EAAQG,MAAO5B,UAC/BH,GyBjBL,SACE,eAAC,GAAD,QAGJ2M,SAASC,eAAe,W","file":"static/js/main.3c365b68.chunk.js","sourcesContent":["let dispatch;\n\nexport const setDispatch = (d) => {\n  dispatch = d;\n};\n\nconst generateType = (name) => name.toUpperCase();\n\nexport const makePackets = (packetsConfig, active) => {\n  const packets = {};\n\n  Object.entries(packetsConfig).forEach(([packetName, config]) => {\n    const packet = { type: generateType(packetName) };\n\n    // Initialise writes' properties\n    if (config.props) {\n      config.props.forEach((key) => {\n        packet[key] = null;\n      });\n    }\n\n    const packetCreator = (args) => {\n      if (args.length) {\n        args.forEach((arg, i) => {\n          // Assign passed arguments to write properties\n          packet[config.props[i]] = arg;\n        });\n      }\n      return packet;\n    };\n\n    packets[packetName] = active\n      ? (...args) => dispatch(packetCreator(args))\n      : (...args) => () => dispatch(packetCreator(args));\n  });\n\n  return packets;\n};\n\nexport const makeTypes = (packetsConfig) => {\n  const types = {};\n  Object.keys(packetsConfig).forEach((key) => {\n    types[key] = generateType(key);\n  });\n  return types;\n};\n","import { setDispatch } from \"./packets\";\nimport { Machine } from \"./constants\";\nimport { Writes } from \"../machine\";\n\nconst getIdFromName = (byName, name) => {\n  const locations = byName[name];\n  if (!locations.length) return null;\n  // Need to add case for no length and locator for > 1\n  return locations[0][0];\n};\n\nconst getIdFromPath = (byName, path) => {\n  const start = path.lastIndexOf(\"/\") + 1;\n  const name = path.slice(start);\n  return getIdFromName(byName, name);\n};\n\nconst makeAlways = (byName, always) => ({\n  ...always,\n  target: getIdFromName(byName, always.target),\n});\n\nconst makeTranistions = (byName, node) => {\n  if (!node.transitions) return null;\n  const transitions = {};\n  Object.entries(node.transitions).forEach(([k, v]) => {\n    transitions[k] =\n      typeof v === \"string\"\n        ? getIdFromName(byName, v)\n        : { ...v, target: getIdFromName(byName, v.target) };\n  });\n  return transitions;\n};\n\nconst makeStateNodes = (chart) => {\n  const byId = {};\n  const byName = {};\n  let id = 0;\n\n  const initNodes = (chart, parent) => {\n    Object.entries(chart.states).forEach(([stateName, state]) => {\n      const nodeId = String(id);\n\n      // Parent knows child\n      parent.children.push(nodeId);\n\n      // Create stateNode\n      const node = {\n        always: state.always || null,\n        children: [],\n        entry: state.entry || null,\n        exit: state.exit || null,\n        id: nodeId,\n        initial: state.initial || null,\n        name: stateName,\n        parent: parent.id,\n        path: `${parent.path}${parent.parent ? \"/\" : \"\"}${stateName}`,\n        transitions: state.on || null,\n      };\n\n      // Assign node to id table\n      byId[node.id] = node;\n\n      // Assign node address tuple to name table\n      if (byName[node.name]) {\n        byName[node.name] = byName[node.name].push([node.id, node.path]);\n      } else {\n        byName[node.name] = [[node.id, node.path]];\n      }\n\n      id += 1;\n\n      // Recursively repeat for remaining nodes in state.\n      if (state.states) {\n        initNodes(state, node);\n      }\n    });\n  };\n\n  const rootId = String(id);\n  const rootNode = {\n    children: [],\n    id: rootId,\n    initial: chart.initial,\n    name: null,\n    parent: null,\n    path: \"/\",\n    siblings: null,\n    transitions: chart.on || null,\n  };\n  byId[rootId] = rootNode;\n  byName[rootNode.path] = [[rootId, rootNode.path]];\n  id += 1;\n\n  initNodes(chart, rootNode);\n\n  const getSiblings = (byId, node) => {\n    if (!node.parent) return null;\n    const parent = byId[node.parent];\n    if (parent.children.length <= 1) return null;\n\n    // Siblings are parents children minus self\n    return parent.children.filter((i) => i !== node.id);\n  };\n\n  const finishNodes = (id) => {\n    const node = byId[id];\n\n    // Initial becomes id\n    node.always = node.always && makeAlways(byName, node.always);\n    node.initial = node.initial && getIdFromName(byName, node.initial);\n    node.transitions = makeTranistions(byName, node);\n    node[\"siblings\"] = getSiblings(byId, node);\n    if (node.children.length) {\n      node.children.forEach((id) => finishNodes(id));\n    }\n  };\n\n  finishNodes(rootId);\n\n  return { byId, byName };\n};\n\nconst getIdOrTransition = (state, event, machine) => {\n  // Root doesn't even have transitions\n  if (state.id === \"0\" && !state.transitions) return null;\n\n  const transition = state.transitions && state.transitions[event.type];\n\n  // Transition found\n  if (transition) return transition;\n\n  // Root has no transition for this event\n  if (state.id === \"0\") return null;\n\n  // Not found yet, try the parent.\n  const parent = machine.states.byId[state.parent];\n  return getIdOrTransition(parent, event, machine);\n};\n\nconst stateCanTransition = (transition, event, storeState, machine) => {\n  if (!transition.target) throw new Error(\"Transition has no target\");\n  if (transition.cond) {\n    const { type, ...data } = event;\n    if (!transition.cond(data, storeState)) return null;\n  }\n  return machine.states.byId[transition.target];\n};\n\nconst getNextState = (state, event, storeState, machine) => {\n  const idOrTransition = getIdOrTransition(state, event, machine);\n  if (!idOrTransition) return null;\n\n  if (typeof idOrTransition === \"string\") {\n    return machine.states.byId[idOrTransition];\n  }\n\n  if (idOrTransition.actions) {\n    const { type, ...eventPayload } = event;\n    fireAction(idOrTransition.actions, eventPayload, storeState);\n  }\n\n  return stateCanTransition(idOrTransition, event, storeState, machine);\n};\n\nconst fireAction = (actions, eventPayload, storeState) => {\n  actions(eventPayload, storeState);\n};\n\nconst execTransition = (newState, event, storeState, store, machine) => {\n  // Handle transient transition\n  if (newState.always) {\n    const nextState = stateCanTransition(newState.always, event, storeState, machine);\n    if (nextState) {\n      execTransition(nextState, event, storeState, store, machine);\n      return;\n    }\n  }\n\n  const { type, ...data } = event;\n  // Handle entry action\n  newState.entry && newState.entry(data, store.getState());\n\n  // Handle initial state\n  if (newState.initial) {\n    execTransition(machine.states.byId[newState.initial], event, storeState, store, machine);\n    return;\n  }\n\n  // Update store\n  store.dispatch({ type: Machine.transition, state: newState.path });\n};\n\nconst initMachine = (chart, store) => {\n  const machine = {\n    states: makeStateNodes(chart),\n  };\n\n  const receive = (event, machine) => {\n    const storeState = store.getState();\n    const currentState = storeState.chart;\n    const id = getIdFromPath(machine.states.byName, currentState);\n    const state = machine.states.byId[id];\n    const nextState = getNextState(state, event, storeState, machine);\n    const { type, ...eventPayload } = event;\n    nextState && state.exit && fireAction(state.exit, eventPayload, storeState);\n    nextState && execTransition(nextState, event, storeState, store, machine);\n  };\n\n  machine.receive = receive;\n\n  return machine\n};\n\nlet machine;\n\nexport const connectMachine = (store) => (next) => (event) => {\n  next(event);\n\n  if (event.type === Machine.init) {\n    setDispatch(store.dispatch);\n    return;\n  }\n\n  if (event.type === Machine.start) {\n    machine = initMachine(event.chart, store);\n    const nextStateId = machine.states.byId[\"0\"].initial;\n    const nextState = machine.states.byId[nextStateId];\n    store.dispatch({ type: Machine.setState, state: nextState.path });\n    return;\n  }\n\n  const ignores = [...Object.values(Writes), ...Object.values(Machine)];\n  if (machine && !ignores.includes(event.type)) machine.receive(event, machine);\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers as reduxCombine } from \"redux\";\nimport { connectMachine } from \"./machine\";\nimport { Machine } from \"./constants\";\n\nconst chart = (state = \"\", write) => {\n  switch (write.type) {\n    case Machine.setState:\n    case Machine.transition:\n      return write.state;\n    default:\n      return state;\n  }\n};\n\nexport const combineReducers = (reducers) => reduxCombine({ chart, ...reducers });\n\nlet store;\n\nexport const initMachine = (reducer) => {\n  store = configureStore({\n    middleware: [connectMachine],\n    reducer,\n  });\n  store.dispatch({ type: Machine.init });\n};\n\nexport const getStore = (chart) => {\n  store.dispatch({ type: Machine.start, chart });\n  return store;\n};\n","export const Machine = {\n  init: \"machine/init\",\n  setState: \"machine/setState\",\n  start: \"machine/start\",\n  transition: \"machine/transition\",\n};\n","import { makePackets, makeTypes } from \"../redux-charts\";\n\nconst eventsConfig = {\n  spin: {},\n  stop: {},\n  peek: { props: [\"id\"] },\n};\n\n// export default eventsConfig;\nexport const Events = makeTypes(eventsConfig);\n\nexport const { spin, stop, peek } = makePackets(eventsConfig);\n","export const getAppState = (state) => state.chart;\n\nexport const getIsRevealed = (state, id) => state.ui[id];\n\nexport const getIsSpinning = (state) => getAppState(state) === \"/playing/spinning\";\n\nexport const getLevelNo = (state) => state.game.level;\n\nexport const getLevel = (state) => {\n  const levelNo = getLevelNo(state);\n  return state.config[levelNo];\n};\n\nexport const getPat = (state) => {\n  const level = getLevel(state);\n  return level.indexOf(0);\n};\n\nexport const getMessage = (state) => {\n  const stateName = getAppState(state).split(\"/\").pop();\n  const message = state.message[stateName];\n  if (typeof message === \"string\") return message;\n  return message[0];\n};\n\nexport const getAttempts = (state) => state.game.attempts;\n\nexport const getIsNotStarted = (state) => getAppState(state) === \"/notStarted\";\n","import { Events } from \"./events\";\nimport {\n  correctGuess,\n  peek,\n  reset,\n  spin,\n  wasLastRound,\n  writeLevelUp,\n} from \"./actions\";\n\nconst chart = {\n  initial: \"notStarted\",\n  states: {\n    notStarted: {\n      on: {\n        [Events.spin]: \"playing\",\n      },\n    },\n    playing: {\n      initial: \"spinning\",\n      states: {\n        spinning: {\n          entry: spin,\n          on: {\n            [Events.stop]: \"guessing\",\n          },\n        },\n        guessing: {\n          on: {\n            [Events.peek]: {\n              target: \"found\",\n              actions: peek,\n              cond: correctGuess,\n            },\n          },\n        },\n        found: {\n          always: {\n            target: \"jeff\",\n            cond: wasLastRound,\n          },\n          exit: writeLevelUp,\n          on: {\n            [Events.spin]: \"spinning\",\n          },\n        },\n      },\n    },\n    jeff: {\n      on: {\n        [Events.spin]: \"gameOver\",\n      },\n    },\n    gameOver: {\n      on: {\n        [Events.spin]: {\n          target: \"notStarted\",\n          actions: reset,\n        },\n      },\n    },\n  },\n};\n\nexport default chart;\n","import { levelUp, resetGame, reveal, stop } from \"./index\";\nimport { getAttempts, getLevelNo, getPat } from \"../selectors\";\n\nexport const correctGuess = ({ id }, state) =>\n  id === getPat(state) || (getLevelNo(state) === 3 && getAttempts(state) === 2);\n\nexport const peek = ({ id }) => {\n  reveal(id);\n};\n\nexport const spin = () => setTimeout(stop(), 1800);\n\nexport const wasLastRound = (_, state) => {\n  const level = getLevelNo(state);\n  return level === 3;\n};\n\nexport const writeLevelUp = () => {\n  levelUp();\n};\n\nexport const reset = () => {\n  resetGame();\n};\n","import { makePackets, makeTypes } from \"../redux-charts\";\n\nconst writesConfig = {\n  levelUp: {},\n  resetGame: {},\n  reveal: { props: [\"id\"] },\n  transition: { props: [\"state\"] },\n};\n\nexport const Writes = makeTypes(writesConfig);\n\nexport const { levelUp, resetGame, reveal, transition } = makePackets(\n  writesConfig,\n  true\n);\n","const config = {\n  levels: [\n    [3, 0, 5],\n    [1, 0, 4],\n    [5, 2, 0],\n    [3, 3, 3],\n  ],\n  script: {\n    notStarted: \"SPIN THE WHEEL\",\n    spinning: [\"ROUND ONE\", \"ROUND TWO\", \"ROUND THREE\", \"ROUND FOUR\"],\n    guessing: [\"WHERE'S PAT?\", \"THAT'S NOT PAT\", \"THAT'S NOT HIM EITHER\"],\n    found: \"BINGO!\",\n    jeff: \"TRIPLE JEFF - OHMIGOD!\",\n    gameOver: \"GAME OVER\",\n  },\n};\n\nexport default config;\n","import { combineReducers } from \"./redux-charts\";\nimport appConfig from \"./config\";\nimport { Writes } from \"./machine\";\n\nconst config = (state = appConfig.levels, write) => {\n  switch (write.type) {\n    default:\n      return state;\n  }\n};\n\nconst initGame = { attempts: 0, level: 0 };\n\nconst game = (state = initGame, write) => {\n  switch (write.type) {\n    case Writes.levelUp:\n      return {\n        attempts: 0,\n        level: state.level + 1,\n      };\n    case Writes.reveal:\n      return { ...state, attempts: state.attempts + 1 };\n    case Writes.resetGame:\n      return initGame;\n    default:\n      return state;\n  }\n};\n\nconst message = (state = appConfig.script, write) => {\n  switch (write.type) {\n    case Writes.levelUp:\n      return {\n        ...state,\n        guessing: appConfig.script.guessing,\n        spinning: state.spinning.slice(1),\n      };\n    case Writes.reveal:\n      return {\n        ...state,\n        guessing: state.guessing.slice(1),\n      };\n    case Writes.resetGame:\n      return appConfig.script;\n    default:\n      return state;\n  }\n};\n\nconst ui = (state = [0, 0, 0], write) => {\n  switch (write.type) {\n    case Writes.levelUp:\n    case Writes.resetGame:\n      return [0, 0, 0];\n    case Writes.reveal: {\n      const nextState = [...state];\n      nextState[write.id] = 1;\n      return nextState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst reducer = combineReducers({ config, game, message, ui });\n\nexport default reducer;\n","import styled from \"styled-components\";\n\nconst Frame = styled.div`\n  display: grid;\n  grid-gap: 1.5vmin;\n  border-radius: 1.5vmin;\n  background-color: ${({ color }) => color};\n  ${({ border }) => border && `border: 2px solid ${border}`};\n  ${({ center }) => center && \"place-items: center\"};\n  ${({ pd }) => pd && `padding: ${pd}`};\n  ${({ h }) => h && `height: ${h}`};\n  ${({ w }) => w && `width: ${w}`};\n  ${({ gtr }) => gtr && `grid-template-rows: ${gtr}`};\n  ${({ gtc }) => gtc && `grid-template-columns: ${gtc}`};\n`;\n\nexport default Frame;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { Frame } from \"../design\";\nimport { getIsNotStarted } from \"../selectors\";\n\nconst hint = keyframes`\n  0% {\n    background-color: brown;\n  }\n  50% {\n    background-color: lightblue;\n  }\n  100% {\n    background-color: brown;\n  }\n`;\n\nconst Container = styled(Frame)`\n  background-color: brown;\n  :hover {\n    border: 2px solid black;\n    background-color: lightblue;\n  }\n\n  :active {\n    border: 2px solid darkgrey;\n    background-color: brown;\n  }\n  ${({ isNotStarted }) => isNotStarted && css`animation: ${hint} 2s ease-in 3s`};\n`;\n\nconst Title = styled.div`\n  color: gold;\n  text-shadow: -0.8vmin 0 black, 0 0.8vmin black, 0.8vmin 0 black,\n    0 -0.8vmin black;\n  font-size: 14.5vmin;\n  font-family: impact;\n`;\n\nconst Marquee = ({ onClick }) => {\n  const isNotStarted = useSelector(getIsNotStarted);\n  return (\n    <Container\n      border=\"darkgrey\"\n      center\n      isNotStarted={isNotStarted}\n      onClick={onClick}\n    >\n      <Title>SPLAT-A-PAT</Title>\n    </Container>\n  );\n};\n\nexport default Marquee;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Frame } from \"../design\";\nimport { getMessage } from \"../selectors\";\n\nconst Message = styled.div`\n  font-family: impact;\n  font-size: 4vmin;\n  @media (orientation: portrait) {\n    font-size: 6vmin;\n  }\n`;\n\nconst DisplayBoard = () => {\n  const message = useSelector(getMessage);\n\n  return (\n    <Frame border=\"black\" center color=\"lightblue\" pd=\"0.8vmin\">\n      <Message>{message}</Message>\n    </Frame>\n  );\n};\n\nexport default DisplayBoard;\n","import { useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current();\n    };\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","export default __webpack_public_path__ + \"static/media/pat.884637d3.png\";","export default __webpack_public_path__ + \"static/media/bruce.c33432fc.png\";","export default __webpack_public_path__ + \"static/media/hilary.75b7683e.png\";","export default __webpack_public_path__ + \"static/media/jeff.526be597.png\";","export default __webpack_public_path__ + \"static/media/meryl.cf12d3fb.png\";","export default __webpack_public_path__ + \"static/media/will.e865c4e8.png\";","export default __webpack_public_path__ + \"static/media/question.ee669cba.png\";","import pat from \"./pat.png\";\nimport bruce from \"./bruce.png\";\nimport hilary from \"./hilary.png\";\nimport jeff from \"./jeff.png\";\nimport meryl from \"./meryl.png\";\nimport will from \"./will.png\";\nexport { default as question } from \"./question.png\";\n\nconst faces = [pat, bruce, hilary, jeff, meryl, will];\n\nexport default faces;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Frame } from \"../design\";\nimport faces, { question } from \"../faces\";\nimport { peek } from \"../machine\";\nimport { getIsRevealed } from \"../selectors\";\n\nconst Container = styled(Frame)`\n  position relative;\n  :active {\n    border: 2px solid black;\n    background-color: lightblue;\n  }\n`;\nconst Div = styled.div`\n  position absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  display: grid;\n  place-items: center;\n`;\n\nconst Img = styled.img`\n  max-height: 100%;\n  width: 100%;\n  object-fit: contain;\n  ${({ hide }) => hide && \"opacity: 0\"};\n`;\n\nconst Reel = ({ face, focus, id, isSpinning }) => {\n  const isRevealed = useSelector((state) => getIsRevealed(state, id));\n\n  return (\n    <Container\n      border=\"black\"\n      center\n      color=\"pink\"\n      key={id}\n      onClick={isRevealed ? () => {} : peek(id)}\n      pd=\"0.8vmin\"\n    >\n      <Div>\n        <Img\n          id={id}\n          hide={isSpinning || isRevealed}\n          src={question}\n        />\n      </Div>\n      <Div>\n        <Img\n          id={id}\n          hide={!isSpinning || !focus}\n          src={faces[0]}\n        />\n      </Div>\n      <Div>\n        <Img\n          id={id}\n          hide={!isRevealed}\n          src={faces[face]}\n        />\n      </Div>\n    </Container>\n  );\n};\n\nexport default Reel;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useInterval } from \"../hooks\";\nimport { Frame } from \"../design\";\nimport Reel from \"./reel\";\nimport { getIsSpinning, getLevel } from \"../selectors\";\n\nconst ReelUnit = () => {\n  const [focus, setFocus] = useState(0);\n  const isSpinning = useSelector(getIsSpinning);\n  const level = useSelector(getLevel);\n  const keys = [\"alpha\", \"beta\", \"charlie\"];\n\n  useInterval(() => {\n    setFocus((f) => (f + 1) % 3);\n  }, isSpinning ? 120 : null);\n\n  useEffect(() => {\n    if (focus && !isSpinning) setFocus(0);\n  }, [isSpinning, focus]);\n\n  return (\n    <Frame border=\"gold\" color=\"brown\" gtc=\"1fr 1fr 1fr\" pd=\"1.5vmin\">\n      {level.map((face, index) => (\n        <Reel\n          face={face}\n          focus={focus === index}\n          id={index}\n          isSpinning={isSpinning}\n          key={keys[index]}\n        />\n      ))}\n    </Frame>\n  );\n};\n\nexport default ReelUnit;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { spin } from \"../machine\";\nimport { Frame } from \"../design\";\nimport Marquee from \"./marquee\";\nimport DisplayBoard from \"./display-board\";\nimport ReelUnit from \"./reel-unit\";\n\nconst Wallpaper = styled.div`\n  display: grid;\n  place-items: center;\n  min-height: 100vh;\n  background-color: #282c34;\n`;\n\nconst Container = styled(Frame)`\n  width: 80vmin;\n  height: 65vmin;\n  @media (orientation: portrait) {\n    width: 90vmin;\n    height: 80vmin;\n  }\n`;\n\nconst Layout = () => (\n  <Wallpaper>\n    <Container color=\"green\" gtr=\"1fr 2fr\" pd=\"1.5vmin\">\n      <Marquee onClick={spin()} />\n      <Frame border=\"darkgrey\" color=\"purple\" gtr=\"auto 1fr\" pd=\"1.5vmin\">\n        <DisplayBoard />\n        <ReelUnit />\n      </Frame>\n    </Container>\n  </Wallpaper>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Layout } from \"./ui\";\nimport \"./font.css\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Impact, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Layout />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { initMachine, getStore } from \"./redux-charts\";\nimport { chart } from \"./machine\";\nimport reducer from \"./reducers\";\nimport App from \"./App\";\n\ninitMachine(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={getStore(chart)}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}