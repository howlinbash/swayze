{"version":3,"sources":["faces/bruce.png","faces/hilary.png","faces/jeff.png","faces/meryl.png","faces/pat.png","faces/question.png","faces/will.png","Marquee.js","Display.js","Face.js","Window.js","Wheel.js","rules.js","App.js","utils.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Marquee","_ref","onClick","react_default","a","createElement","className","Display","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","message","prevProps","_this$props","answer","attempt","gameOver","isSpinning","round","setState","concat","jeff","Component","Face","display","_this2","off","setTimeout","blink","clearTimeout","src","face","style","Window","guessMade","handleClick","bind","assertThisInitialized","id","pat","_this$props2","focus","key","src_Face","question","Wheel","windows","requestStartSpin","alternateWindows","clearInterval","timerID","setInterval","getNextKey","wheel","prevKey","faces","_this$state","map","src_Window_0","rules","alpha","beta","charlie","will","bruce","meryl","hilary","App","ms","toggleSpinner","Promise","resolve","then","length","updateGameState","spinWheel","_this3","_this$state2","src_Marquee_0","src_Display_0","src_Wheel_0","handleAnswer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65759bb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bruce.747bda94.png\";","module.exports = __webpack_public_path__ + \"static/media/hilary.153e885c.png\";","module.exports = __webpack_public_path__ + \"static/media/jeff.fceb825f.png\";","module.exports = __webpack_public_path__ + \"static/media/meryl.e6946f91.png\";","module.exports = __webpack_public_path__ + \"static/media/pat.6506326a.png\";","module.exports = __webpack_public_path__ + \"static/media/question.8ffd5475.png\";","module.exports = __webpack_public_path__ + \"static/media/will.e4887cf2.png\";","import React from 'react';\nimport './Marquee.css';\n\nconst Marquee = ({ onClick }) => (\n  <div className=\"marquee\" onClick={onClick} >\n    <div className=\"marqueeText\">\n      SPLAT-A-PAT\n    </div>\n  </div>\n);\n\nexport default Marquee;\n","import React, { Component } from 'react';\nimport './Display.css';\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: 'SPIN THE WHEEL' }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { answer, attempt, gameOver, isSpinning, round } = this.props;\n\n    if (gameOver && gameOver !== prevProps.gameOver) {\n      this.setState(state => ({ message: \"GAME OVER\" }));\n      return;\n    }\n\n    if (isSpinning !== prevProps.isSpinning) {\n      if (!isSpinning) {\n        this.setState(state => ({ message: \"WHERE'S PAT?\" }));\n        return;\n      }\n      this.setState(state => ({ message: `ROUND ${round}` }));\n      return;\n    }\n\n    if (!answer && attempt !== prevProps.attempt) {\n      if (attempt === 2) {\n        this.setState(state => ({ message: \"THAT'S NOT HIM EITHER\" }));\n        return;\n      }\n      if (attempt === 1) {\n        this.setState(state => ({ message: \"THAT'S NOT PAT\" }));\n        return;\n      }\n    }\n\n    if (answer && attempt !== prevProps.attempt) {\n      this.setState(state => ({ message: \"BINGO!\" }));\n      return;\n    }\n  }\n\n  render() {\n    const { jeff } = this.props;\n\n    return (\n      <div className=\"display\">\n        <div className=\"message\">\n          {jeff ? 'TRIPLE JEFF - OHMIGOD!' : this.state.message}\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default Display;\n","import React, { Component } from 'react';\n\nclass Face extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { display: '' }\n  }\n\n  componentDidMount() {\n    const { display } = this.state;\n    this.off = setTimeout(() => {\n      this.blink(display);\n      this.off = 0;\n    }, 150);\n  }\n\n  componentWillUnmount() {\n    if (this.off) {\n        clearTimeout(this.off);\n        this.off = 0;\n    }\n  }\n\n  blink(state) {\n    const display = state === '' ? 'none' : '';\n    this.setState(state => ({\n      display,\n    }));\n  }\n\n  render() {\n    const { display } = this.state;\n\n    return <img src={this.props.face} style={{ display }} />\n  }\n};\n\nexport default Face;\n","import React, { Component } from 'react';\nimport Face from './Face';\nimport { pat, question } from './faces';\nimport './Window.css';\n\nclass Window extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { guessMade: false };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isSpinning } = this.props;\n    if (isSpinning !== prevProps.isSpinning) {\n      this.setState(state => ({ guessMade: false }));\n    }\n  }\n\n  handleClick(id) {\n    const { answer, face, } = this.props;\n    this.setState(state => ({ guessMade: true }));\n    answer(face === pat)\n  }\n\n  render() {\n  const { face, focus, id, isSpinning } = this.props;\n  const { guessMade } = this.state;\n\n  if (guessMade) {\n    return (\n      <div className=\"window\" key={id}>\n        <img src={face} />\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className=\"window\"\n      key={id}\n      onClick={() => this.handleClick(id)}\n    >\n      {isSpinning && !guessMade ? (\n        focus === id ? <Face face={pat} id={id} /> : null\n      ) : (\n        <img src={question} />\n      )}\n    </div>\n    )\n  }\n}\n\nexport default Window;\n","import React, { Component } from 'react';\nimport Window from './Window';\nimport './Wheel.css';\n\nclass Wheel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      focus: '',\n      isSpinning: false,\n      windows: [\n        {id: 'alpha'},\n        {id: 'beta'},\n        {id: 'charlie'}\n      ],\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { requestStartSpin } = this.props;\n    const { isSpinning } = this.state;\n    if (requestStartSpin && !isSpinning) {\n\t  this.setState(state => ({ isSpinning: true }));\n\t  this.alternateWindows()\n\t}\n\tif (isSpinning && requestStartSpin !== prevProps.requestStartSpin ) {\n\t  this.setState(state => ({ isSpinning: false }));\n      clearInterval(this.timerID);\n    }\n  }\n\n  alternateWindows() {\n    const { windows } = this.state;\n    let key = 0;\n    this.timerID = setInterval(() => {\n        this.focus(windows[key].id)\n        key = this.getNextKey(key)\n      },\n      150\n    );\n  }\n\n  focus(wheel) {\n    this.setState(state => ({\n      focus: wheel\n    }));\n  }\n\n  getNextKey(prevKey) {\n    if (prevKey === 2) { return 0 };\n    return prevKey + 1;\n  }\n\n  render() {\n    const { answer, faces, } = this.props;\n    const { focus, isSpinning, windows } = this.state;\n\n    return (\n      <div className=\"wheel\">\n        {windows.map(({id}) => (\n          <Window\n            answer={answer}\n            face={faces[id]}\n            focus={focus}\n            id={id}\n            isSpinning={isSpinning}\n            key={id}\n          />\n        ))}\n      </div>\n    );\n  }\n};\n\nexport default Wheel;\n","import { bruce, hilary, jeff, meryl, pat, will } from './faces';\n\nconst rules = [\n  {\n    alpha: jeff,\n    beta: pat,\n    charlie: will,\n    round: 'ONE',\n  },\n  {\n    alpha: bruce,\n    beta: pat,\n    charlie: meryl,\n    round: 'TWO',\n  },\n  {\n    alpha: will,\n    beta: hilary,\n    charlie: pat,\n    round: 'THREE',\n  },\n  {\n    alpha: jeff,\n    beta: jeff,\n    charlie: jeff,\n    round: 'FOUR',\n  }\n]\n\nexport default rules;\n","import React, { Component } from 'react';\nimport { delay } from './utils';\nimport Marquee from './Marquee';\nimport Display from './Display';\nimport Wheel from './Wheel';\nimport rules from './rules';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: null,\n      attempt: 0,\n      gameOver: true,\n      isSpinning: false,\n      round: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  toggleSpinner() {\n    this.setState(state => ({\n      isSpinning: !state.isSpinning\n    }));\n  }\n\n  spinWheel() {\n    this.toggleSpinner();\n    delay(1950).then(() => {this.toggleSpinner()})\n  }\n\n  updateGameState() {\n    const { gameOver, round } = this.state;\n\n    if (gameOver) {\n      this.setState(state => ({\n        gameOver: false,\n        round: 0,\n      }));\n      return;\n    }\n\n    if (round === rules.length - 1) {\n      this.setState(state => ({\n        gameOver: true,\n        round: 0,\n      }));\n      return;\n    }\n\n    this.setState(state => {\n      const nextRound = state.round + 1;\n      return ({\n        attempt: 0,\n        round: nextRound\n      });\n    });\n  }\n\n  handleAnswer(answer) {\n    this.setState(state => {\n      const nextAttempt = state.attempt + 1;\n      return ({\n        attempt: nextAttempt,\n        answer: answer\n      })\n    });\n  }\n\n  handleClick() {\n    const { round } = this.state;\n    this.updateGameState();\n    if (round !== rules.length - 1) {\n      this.spinWheel();\n    }\n  }\n\n\n  render() {\n    const { answer, attempt, gameOver, round } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"machine\">\n          <Marquee onClick={this.handleClick} />\n          <div className=\"console\">\n            <Display\n              answer={answer}\n              attempt={attempt}\n              gameOver={gameOver}\n              isSpinning={this.state.isSpinning}\n              jeff={round === 3 && attempt === 3}\n              round={round < 4 && rules[round].round}\n            />\n            <Wheel\n              answer={answer => this.handleAnswer(answer)}\n              requestStartSpin={this.state.isSpinning}\n              faces={round < 4 && rules[round]}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}