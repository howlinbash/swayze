{"version":3,"sources":["lib/index.js","machine/machine.js","machine/store.js","constants.js","writes.js","makeStates.js","events.js","selectors.js","machine/charts.js","actions.js","config.js","reducers.js","store.js","design/frame.js","ui/marquee.js","ui/display-board.js","hooks/use-interval.js","faces/pat.png","faces/bruce.png","faces/hilary.png","faces/jeff.png","faces/meryl.png","faces/will.png","faces/question.png","faces/index.js","ui/reel.js","ui/reel-unit.js","ui/layout.js","App.js","index.js"],"names":["dispatch","machine","store","reducer","generateType","name","toUpperCase","makePackets","packetsConfig","active","packets","Object","entries","forEach","packetName","config","packet","type","props","key","packetCreator","args","length","arg","i","makeTypes","types","keys","Machine","init","setState","start","transition","writesConfig","levelUp","resetGame","reveal","Types","getIdFromName","byName","locations","makeStateNodes","chart","byId","id","rootId","String","rootNode","children","initial","parent","path","siblings","transitions","on","initNodes","states","stateName","state","nodeId","push","node","always","entry","exit","finishNodes","target","makeAlways","k","v","makeTranistions","filter","getSiblings","getIdOrTransition","event","stateCanTransition","storeState","Error","cond","data","getNextState","idOrTransition","actions","eventPayload","fireAction","initMachine","execTransition","newState","nextState","getState","receive","currentState","lastIndexOf","slice","getIdFromPath","connectMachine","next","d","ignores","values","Writes","includes","getChart","nextStateId","eventsConfig","spin","stop","peek","getAppState","getIsSpinning","getLevelNo","game","level","getLevel","levelNo","getMessage","split","pop","message","getIsNotStarted","notStarted","SPIN","playing","spinning","setTimeout","STOP","guessing","PEEK","indexOf","getPat","attempts","getAttempts","found","_","jeff","gameOver","levels","script","initGame","combineReducers","write","appConfig","ui","configureStore","middleware","Frame","styled","div","color","border","center","pd","h","w","gtr","gtc","hint","keyframes","Container","isNotStarted","css","Title","Marquee","onClick","useSelector","Message","DisplayBoard","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","faces","pat","bruce","hilary","meryl","will","Div","Img","img","hide","Reel","face","focus","isSpinning","isRevealed","getIsRevealed","src","question","ReelUnit","useState","setFocus","f","map","index","Wallpaper","Layout","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04ff5c0b.chunk.js","sourcesContent":["let dispatch;\n\nexport const setDispatch = (d) => {\n  dispatch = d;\n};\n\nconst generateType = (name) => name.toUpperCase();\n\nexport const makePackets = (packetsConfig, active) => {\n  const packets = {};\n\n  Object.entries(packetsConfig).forEach(([packetName, config]) => {\n    const packet = { type: generateType(packetName) };\n\n    // Initialise writes' properties\n    if (config.props) {\n      config.props.forEach((key) => {\n        packet[key] = null;\n      });\n    }\n\n    const packetCreator = (args) => {\n      if (args.length) {\n        args.forEach((arg, i) => {\n          // Assign passed arguments to write properties\n          packet[config.props[i]] = arg;\n        });\n      }\n      return packet;\n    };\n\n    packets[packetName] = active\n      ? (...args) => dispatch(packetCreator(args))\n      : (...args) => () => dispatch(packetCreator(args));\n  });\n\n  return packets;\n};\n\nexport const makeTypes = (packetsConfig) => {\n  const types = {};\n  Object.keys(packetsConfig).forEach((key) => {\n    types[key] = generateType(key);\n  });\n  return types;\n};\n","import { setDispatch } from \"../lib\";\nimport { setChart } from \"../makeStates\";\nimport { Machine } from \"../constants\";\nimport { Types as Writes } from \"../writes\";\n\nlet machine;\n\nconst getIdFromName = (byName, name) => {\n  const locations = byName[name];\n  if (!locations.length) return null;\n  // Need to add case for no length and locator for > 1\n  return locations[0][0];\n};\n\nconst getIdFromPath = (byName, path) => {\n  const start = path.lastIndexOf(\"/\") + 1;\n  const name = path.slice(start);\n  return getIdFromName(byName, name);\n};\n\nconst makeAlways = (byName, always) => ({\n  ...always,\n  target: getIdFromName(byName, always.target),\n});\n\nconst makeTranistions = (byName, node) => {\n  if (!node.transitions) return null;\n  const transitions = {};\n  Object.entries(node.transitions).forEach(([k, v]) => {\n    transitions[k] =\n      typeof v === \"string\"\n        ? getIdFromName(byName, v)\n        : { ...v, target: getIdFromName(byName, v.target) };\n  });\n  return transitions;\n};\n\nexport const makeStateNodes = (chart) => {\n  const byId = {};\n  const byName = {};\n  let id = 0;\n\n  const initNodes = (chart, parent) => {\n    Object.entries(chart.states).forEach(([stateName, state]) => {\n      const nodeId = String(id);\n\n      // Parent knows child\n      parent.children.push(nodeId);\n\n      // Create stateNode\n      const node = {\n        always: state.always || null,\n        children: [],\n        entry: state.entry || null,\n        exit: state.exit || null,\n        id: nodeId,\n        initial: state.initial || null,\n        name: stateName,\n        parent: parent.id,\n        path: `${parent.path}${parent.parent ? \"/\" : \"\"}${stateName}`,\n        transitions: state.on || null,\n      };\n\n      // Assign node to id table\n      byId[node.id] = node;\n\n      // Assign node address tuple to name table\n      if (byName[node.name]) {\n        byName[node.name] = byName[node.name].push([node.id, node.path]);\n      } else {\n        byName[node.name] = [[node.id, node.path]];\n      }\n\n      id += 1;\n\n      // Recursively repeat for remaining nodes in state.\n      if (state.states) {\n        initNodes(state, node);\n      }\n    });\n  };\n\n  const rootId = String(id);\n  const rootNode = {\n    children: [],\n    id: rootId,\n    initial: chart.initial,\n    name: null,\n    parent: null,\n    path: \"/\",\n    siblings: null,\n    transitions: chart.on || null,\n  };\n  byId[rootId] = rootNode;\n  byName[rootNode.path] = [[rootId, rootNode.path]];\n  id += 1;\n\n  initNodes(chart, rootNode);\n\n  const getSiblings = (byId, node) => {\n    if (!node.parent) return null;\n    const parent = byId[node.parent];\n    if (parent.children.length <= 1) return null;\n\n    // Siblings are parents children minus self\n    return parent.children.filter((i) => i !== node.id);\n  };\n\n  const finishNodes = (id) => {\n    const node = byId[id];\n\n    // Initial becomes id\n    node.always = node.always && makeAlways(byName, node.always);\n    node.initial = node.initial && getIdFromName(byName, node.initial);\n    node.transitions = makeTranistions(byName, node);\n    node[\"siblings\"] = getSiblings(byId, node);\n    if (node.children.length) {\n      node.children.forEach((id) => finishNodes(id));\n    }\n  };\n\n  finishNodes(rootId);\n\n  return { byId, byName };\n};\n\nconst getIdOrTransition = (state, event) => {\n  // Root doesn't even have transitions\n  if (state.id === \"0\" && !state.transitions) return null;\n\n  const transition = state.transitions && state.transitions[event.type];\n\n  // Transition found\n  if (transition) return transition;\n\n  // Root has no transition for this event\n  if (state.id === \"0\") return null;\n\n  // Not found yet, try the parent.\n  const parent = machine.states.byId[state.parent];\n  return getIdOrTransition(parent, event);\n};\n\nconst stateCanTransition = (transition, event, storeState) => {\n  if (!transition.target) throw new Error(\"Transition has no target\");\n  if (transition.cond) {\n    const { type, ...data } = event;\n    if (!transition.cond(data, storeState)) return null;\n  }\n  return machine.states.byId[transition.target];\n};\n\nconst getNextState = (state, event, storeState) => {\n  const idOrTransition = getIdOrTransition(state, event);\n  if (!idOrTransition) return null;\n\n  if (typeof idOrTransition === \"string\") {\n    return machine.states.byId[idOrTransition];\n  }\n\n  if (idOrTransition.actions) {\n    const { type, ...eventPayload } = event;\n    fireAction(idOrTransition.actions, eventPayload, storeState);\n  }\n\n  return stateCanTransition(idOrTransition, event, storeState);\n};\n\nconst fireAction = (actions, eventPayload, storeState) => {\n  actions(eventPayload, storeState);\n};\n\nconst initMachine = (config, store) => {\n  const chart = config;\n\n  const execTransition = (newState, event, storeState) => {\n    // Handle transient transition\n    if (newState.always) {\n      const nextState = stateCanTransition(newState.always, event, storeState);\n      if (nextState) {\n        execTransition(nextState, event);\n        return;\n      }\n    }\n\n    const { type, ...data } = event;\n    // Handle entry action\n    newState.entry && newState.entry(data, store.getState());\n\n    // Handle initial state\n    if (newState.initial) {\n      execTransition(machine.states.byId[newState.initial], event, storeState);\n      return;\n    }\n\n    // Update store\n    store.dispatch({ type: Machine.transition, state: newState.path });\n  };\n\n  const states = makeStateNodes(chart);\n\n  const receive = (event) => {\n    const storeState = store.getState();\n    const currentState = storeState.chart;\n    const id = getIdFromPath(machine.states.byName, currentState);\n    const state = machine.states.byId[id];\n    const nextState = getNextState(state, event, storeState);\n    const { type, ...eventPayload } = event;\n    nextState && state.exit && fireAction(state.exit, eventPayload, storeState);\n    nextState && execTransition(nextState, event, storeState);\n  };\n\n  return {\n    receive,\n    states,\n  };\n};\n\nexport const connectMachine = (store) => (next) => (event) => {\n  next(event);\n\n  if (event.type === Machine.init) {\n    setDispatch(store.dispatch);\n    return;\n  }\n  if (event.type === Machine.start) {\n    const chart = event.getChart();\n    setChart(chart);\n    machine = initMachine(chart, store);\n    const nextStateId = machine.states.byId[\"0\"].initial;\n    const nextState = machine.states.byId[nextStateId];\n    store.dispatch({ type: Machine.setState, state: nextState.path });\n    return;\n  }\n  const ignores = [...Object.values(Writes), ...Object.values(Machine)];\n  if (machine && !ignores.includes(event.type)) machine.receive(event);\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { connectMachine } from \"./machine\";\nimport { Machine } from \"../constants\";\n\nlet store;\n\nexport const initStore = (reducer) => {\n  store = configureStore({\n    middleware: [connectMachine],\n    reducer,\n  });\n  store.dispatch({ type: Machine.init });\n};\n\nexport const startMachine = (getChart) => {\n  store.dispatch({ type: Machine.start, getChart });\n  return store;\n};\n","export const Machine = {\n  init: \"machine/init\",\n  setState: \"machine/setState\",\n  start: \"machine/start\",\n  transition: \"machine/transition\",\n};\n","import { makePackets, makeTypes } from \"./lib\";\n\nexport const generateType = (name) => name.toUpperCase();\n\nconst writesConfig = {\n  levelUp: {},\n  resetGame: {},\n  reveal: { props: [\"id\"] },\n  transition: { props: [\"state\"] },\n};\n\nexport const Types = makeTypes(writesConfig);\n\nexport const { levelUp, resetGame, reveal, transition } = makePackets(\n  writesConfig,\n  true\n);\n","let chart;\n\nexport const setChart = (c) => {\n  chart = c;\n};\n\nexport const makeStates = () => {\n  const States = {};\n  Object.keys(chart.states).forEach((key) => {\n    States[key] = `/${key}`;\n  });\n  return States;\n};\n","import { makePackets, makeTypes } from \"./lib\";\n\nexport const generateType = (name) => name.toUpperCase();\n\nconst eventsConfig = {\n  spin: {},\n  stop: {},\n  peek: { props: [\"id\"] },\n};\n\nexport const Types = makeTypes(eventsConfig);\n\nexport const { spin, stop, peek } = makePackets(eventsConfig);\n","export const getAppState = (state) => state.chart;\n\nexport const getIsRevealed = (state, id) => state.ui[id];\n\nexport const getIsSpinning = (state) => getAppState(state) === \"/playing/spinning\";\n\nexport const getLevelNo = (state) => state.game.level;\n\nexport const getLevel = (state) => {\n  const levelNo = getLevelNo(state);\n  return state.config[levelNo];\n};\n\nexport const getPat = (state) => {\n  const level = getLevel(state);\n  return level.indexOf(0);\n};\n\nexport const getMessage = (state) => {\n  const stateName = getAppState(state).split(\"/\").pop();\n  const message = state.message[stateName];\n  if (typeof message === \"string\") return message;\n  return message[0];\n};\n\nexport const getAttempts = (state) => state.game.attempts;\n\nexport const getIsNotStarted = (state) => getAppState(state) === \"/playing/spinning\";\n","import {\n  correctGuess,\n  peek,\n  reset,\n  spin,\n  wasLastRound,\n  writeLevelUp,\n} from \"../actions\";\n\nconst chart = {\n  initial: \"notStarted\",\n  states: {\n    notStarted: {\n      on: {\n        SPIN: \"playing\",\n      },\n    },\n    playing: {\n      initial: \"spinning\",\n      states: {\n        spinning: {\n          entry: spin,\n          on: {\n            STOP: \"guessing\",\n          },\n        },\n        guessing: {\n          on: {\n            PEEK: {\n              target: \"found\",\n              actions: peek,\n              cond: correctGuess,\n            },\n          },\n        },\n        found: {\n          always: {\n            target: \"jeff\",\n            cond: wasLastRound,\n          },\n          exit: writeLevelUp,\n          on: {\n            SPIN: \"spinning\",\n          },\n        },\n      },\n    },\n    jeff: {\n      on: {\n        SPIN: \"gameOver\",\n      },\n    },\n    gameOver: {\n      on: {\n        SPIN: {\n          target: \"notStarted\",\n          actions: reset,\n        },\n      },\n    },\n  },\n};\n\nconst getChart = () => chart;\n\nexport default getChart;\n","import { stop } from \"./events\";\nimport { getAttempts, getLevelNo, getPat } from \"./selectors\";\nimport { levelUp, resetGame, reveal } from \"./writes\";\n\nexport const correctGuess = ({ id }, state) =>\n  id === getPat(state) || (getLevelNo(state) === 3 && getAttempts(state) === 2);\n\nexport const peek = ({ id }) => {\n  reveal(id);\n};\n\nexport const spin = () => setTimeout(stop(), 1800);\n\nexport const wasLastRound = (_, state) => {\n  const level = getLevelNo(state);\n  return level === 3;\n};\n\nexport const writeLevelUp = () => {\n  levelUp();\n};\n\nexport const reset = () => {\n  resetGame();\n};\n","const config = {\n  levels: [\n    [3, 0, 5],\n    [1, 0, 4],\n    [5, 2, 0],\n    [3, 3, 3],\n  ],\n  script: {\n    notStarted: \"SPIN THE WHEEL\",\n    spinning: [\"ROUND ONE\", \"ROUND TWO\", \"ROUND THREE\", \"ROUND FOUR\"],\n    guessing: [\"WHERE'S PAT?\", \"THAT'S NOT PAT\", \"THAT'S NOT HIM EITHER\"],\n    found: \"BINGO!\",\n    jeff: \"TRIPLE JEFF - OHMIGOD!\",\n    gameOver: \"GAME OVER\",\n  },\n};\n\nexport default config;\n","import { combineReducers } from \"redux\";\nimport { Machine } from \"./constants\";\nimport appConfig from \"./config\";\nimport { Types as Writes } from \"./writes\";\n\nconst chart = (state = \"\", write) => {\n  switch (write.type) {\n    case Machine.setState:\n    case Machine.transition:\n      return write.state;\n    default:\n      return state;\n  }\n};\n\nconst config = (state = appConfig.levels, write) => {\n  switch (write.type) {\n    default:\n      return state;\n  }\n};\n\nconst initGame = { attempts: 0, level: 0 };\n\nconst game = (state = initGame, write) => {\n  switch (write.type) {\n    case Writes.levelUp:\n      return {\n        attempts: 0,\n        level: state.level + 1,\n      };\n    case Writes.reveal:\n      return { ...state, attempts: state.attempts + 1 };\n    case Writes.resetGame:\n      return initGame;\n    default:\n      return state;\n  }\n};\n\nconst message = (state = appConfig.script, write) => {\n  switch (write.type) {\n    case Writes.levelUp:\n      return {\n        ...state,\n        guessing: appConfig.script.guessing,\n        spinning: state.spinning.slice(1),\n      };\n    case Writes.reveal:\n      return {\n        ...state,\n        guessing: state.guessing.slice(1),\n      };\n    case Writes.resetGame:\n      return appConfig.script;\n    default:\n      return state;\n  }\n};\n\nconst ui = (state = [0, 0, 0], write) => {\n  switch (write.type) {\n    case Writes.levelUp:\n    case Writes.resetGame:\n      return [0, 0, 0];\n    case Writes.reveal: {\n      const nextState = [...state];\n      nextState[write.id] = 1;\n      return nextState;\n    }\n    default:\n      return state;\n  }\n};\n\nconst reducer = combineReducers({ chart, config, game, message, ui });\n\nexport default reducer;\n","import { initStore, startMachine } from \"./machine\";\nimport reducer from \"./reducers\";\nimport { getChart } from \"./machine\";\n\ninitStore(reducer);\n\nconst store = startMachine(getChart);\n\nexport default store;\n","import styled from \"styled-components\";\n\nconst Frame = styled.div`\n  display: grid;\n  grid-gap: 1.5vmin;\n  border-radius: 1.5vmin;\n  background-color: ${({ color }) => color};\n  ${({ border }) => border && `border: 2px solid ${border}`};\n  ${({ center }) => center && \"place-items: center\"};\n  ${({ pd }) => pd && `padding: ${pd}`};\n  ${({ h }) => h && `height: ${h}`};\n  ${({ w }) => w && `width: ${w}`};\n  ${({ gtr }) => gtr && `grid-template-rows: ${gtr}`};\n  ${({ gtc }) => gtc && `grid-template-columns: ${gtc}`};\n`;\n\nexport default Frame;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { Frame } from \"../design\";\nimport { getIsNotStarted } from \"../selectors\";\n\nconst hint = keyframes`\n  0% {\n    background-color: brown;\n  }\n  50% {\n    background-color: lightblue;\n  }\n  100% {\n    background-color: brown;\n  }\n`;\n\nconst Container = styled(Frame)`\n  background-color: brown;\n  :hover {\n    border: 2px solid black;\n    background-color: lightblue;\n  }\n\n  :active {\n    border: 2px solid darkgrey;\n    background-color: brown;\n  }\n  ${({ isNotStarted }) => isNotStarted && css`animation: ${hint} 2s ease-in 3s`};\n`;\n\nconst Title = styled.div`\n  color: gold;\n  text-shadow: -0.8vmin 0 black, 0 0.8vmin black, 0.8vmin 0 black,\n    0 -0.8vmin black;\n  font-size: 14.5vmin;\n  font-family: impact;\n`;\n\nconst Marquee = ({ onClick }) => {\n  const isNotStarted = useSelector(getIsNotStarted);\n  return (\n    <Container\n      border=\"darkgrey\"\n      center\n      isNotStarted={isNotStarted}\n      onClick={onClick}\n    >\n      <Title>SPLAT-A-PAT</Title>\n    </Container>\n  );\n};\n\nexport default Marquee;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Frame } from \"../design\";\nimport { getMessage } from \"../selectors\";\n\nconst Message = styled.div`\n  font-family: impact;\n  font-size: 4vmin;\n  @media (orientation: portrait) {\n    font-size: 6vmin;\n  }\n`;\n\nconst DisplayBoard = () => {\n  const message = useSelector(getMessage);\n\n  return (\n    <Frame border=\"black\" center color=\"lightblue\" pd=\"0.8vmin\">\n      <Message>{message}</Message>\n    </Frame>\n  );\n};\n\nexport default DisplayBoard;\n","import { useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current();\n    };\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","export default __webpack_public_path__ + \"static/media/pat.884637d3.png\";","export default __webpack_public_path__ + \"static/media/bruce.c33432fc.png\";","export default __webpack_public_path__ + \"static/media/hilary.75b7683e.png\";","export default __webpack_public_path__ + \"static/media/jeff.526be597.png\";","export default __webpack_public_path__ + \"static/media/meryl.cf12d3fb.png\";","export default __webpack_public_path__ + \"static/media/will.e865c4e8.png\";","export default __webpack_public_path__ + \"static/media/question.ee669cba.png\";","import pat from \"./pat.png\";\nimport bruce from \"./bruce.png\";\nimport hilary from \"./hilary.png\";\nimport jeff from \"./jeff.png\";\nimport meryl from \"./meryl.png\";\nimport will from \"./will.png\";\nexport { default as question } from \"./question.png\";\n\nconst faces = [pat, bruce, hilary, jeff, meryl, will];\n\nexport default faces;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Frame } from \"../design\";\nimport faces, { question } from \"../faces\";\nimport { peek } from \"../events\";\nimport { getIsRevealed } from \"../selectors\";\n\nconst Container = styled(Frame)`\n  position relative;\n  :active {\n    border: 2px solid black;\n    background-color: lightblue;\n  }\n`;\nconst Div = styled.div`\n  position absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  display: grid;\n  place-items: center;\n`;\n\nconst Img = styled.img`\n  max-height: 100%;\n  width: 100%;\n  object-fit: contain;\n  ${({ hide }) => hide && \"opacity: 0\"};\n`;\n\nconst Reel = ({ face, focus, id, isSpinning }) => {\n  const isRevealed = useSelector((state) => getIsRevealed(state, id));\n\n  return (\n    <Container\n      border=\"black\"\n      center\n      color=\"pink\"\n      key={id}\n      onClick={isRevealed ? () => {} : peek(id)}\n      pd=\"0.8vmin\"\n    >\n      <Div>\n        <Img\n          id={id}\n          hide={isSpinning || isRevealed}\n          src={question}\n        />\n      </Div>\n      <Div>\n        <Img\n          id={id}\n          hide={!isSpinning || !focus}\n          src={faces[0]}\n        />\n      </Div>\n      <Div>\n        <Img\n          id={id}\n          hide={!isRevealed}\n          src={faces[face]}\n        />\n      </Div>\n    </Container>\n  );\n};\n\nexport default Reel;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useInterval } from \"../hooks\";\nimport { Frame } from \"../design\";\nimport Reel from \"./reel\";\nimport { getIsSpinning, getLevel } from \"../selectors\";\n\nconst ReelUnit = () => {\n  const [focus, setFocus] = useState(0);\n  const isSpinning = useSelector(getIsSpinning);\n  const level = useSelector(getLevel);\n  const keys = [\"alpha\", \"beta\", \"charlie\"];\n\n  useInterval(() => {\n    setFocus((f) => (f + 1) % 3);\n  }, isSpinning ? 120 : null);\n\n  useEffect(() => {\n    if (focus && !isSpinning) setFocus(0);\n  }, [isSpinning, focus]);\n\n  return (\n    <Frame border=\"gold\" color=\"brown\" gtc=\"1fr 1fr 1fr\" pd=\"1.5vmin\">\n      {level.map((face, index) => (\n        <Reel\n          face={face}\n          focus={focus === index}\n          id={index}\n          isSpinning={isSpinning}\n          key={keys[index]}\n        />\n      ))}\n    </Frame>\n  );\n};\n\nexport default ReelUnit;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { spin } from \"../events\";\nimport { Frame } from \"../design\";\nimport Marquee from \"./marquee\";\nimport DisplayBoard from \"./display-board\";\nimport ReelUnit from \"./reel-unit\";\n\nconst Wallpaper = styled.div`\n  display: grid;\n  place-items: center;\n  min-height: 100vh;\n  background-color: #282c34;\n`;\n\nconst Container = styled(Frame)`\n  width: 80vmin;\n  height: 65vmin;\n  @media (orientation: portrait) {\n    width: 90vmin;\n    height: 80vmin;\n  }\n`;\n\nconst Layout = () => (\n  <Wallpaper>\n    <Container color=\"green\" gtr=\"1fr 2fr\" pd=\"1.5vmin\">\n      <Marquee onClick={spin()} />\n      <Frame border=\"darkgrey\" color=\"purple\" gtr=\"auto 1fr\" pd=\"1.5vmin\">\n        <DisplayBoard />\n        <ReelUnit />\n      </Frame>\n    </Container>\n  </Wallpaper>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Layout } from \"./ui\";\nimport \"./font.css\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: Impact, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Layout />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}